{"timestamp": "2025-06-06T16:50:06.036000", "level": "INFO", "logger": "experiment.full_evaluation", "message": "Experiment started", "module": "logger", "function": "__init__", "line": 96, "taskName": null, "experiment": "full_evaluation", "start_time": "2025-06-06T18:50:06.033405", "asctime": "18:50:06"}
{"timestamp": "2025-06-06T16:50:06.036680", "level": "INFO", "logger": "experiment.full_evaluation", "message": "Experiment configuration", "module": "logger", "function": "log_config", "line": 106, "taskName": null, "config": {"model": "gpt-4o-mini", "temperature": 0.7, "max_tokens": 4000, "batch_size": 5, "n_diagnoses": 10, "judges": {"semantic": {"enabled": true, "threshold": 0.8, "top_k": 5}, "severity": {"enabled": true, "model": "gpt-4o-mini", "temperature": 0.3}}, "visualizations": {"formats": ["png", "html"], "plots": ["severity_vs_similarity", "quadrant_analysis", "combined_heatmap", "score_distribution", "top_errors"]}, "save_raw_predictions": true, "save_detailed_results": true, "generate_report": true, "log_level": "INFO", "structured_logs": true}, "asctime": "18:50:06"}
{"timestamp": "2025-06-06T16:50:07.394869", "level": "INFO", "logger": "experiment.full_evaluation", "message": "Dataset loaded", "module": "logger", "function": "log_dataset", "line": 113, "taskName": null, "dataset": {"path": "C:\\Dev\\F29\\dxgpt-latitude-bench-test\\src\\datasets\\ramedis-45.json", "name": "ramedis-45", "size": 42569, "type": ".json"}, "asctime": "18:50:07"}
{"timestamp": "2025-06-06T16:50:07.598853", "level": "INFO", "logger": "experiment.full_evaluation", "message": "Starting semantic evaluation", "module": "run", "function": "run_semantic_evaluation", "line": 155, "taskName": null, "asctime": "18:50:07"}
{"timestamp": "2025-06-06T16:50:10.647319", "level": "INFO", "logger": "experiment.full_evaluation", "message": "Semantic evaluation completed", "module": "run", "function": "run_semantic_evaluation", "line": 169, "taskName": null, "summary": {"total_cases": 45, "avg_score": 0.0, "min_score": 0.0, "max_score": 0.0, "perfect_matches": 0, "score_distribution": {"0.0-0.2": 45, "0.2-0.4": 0, "0.4-0.6": 0, "0.6-0.8": 0, "0.8-1.0": 0}}, "asctime": "18:50:10"}
{"timestamp": "2025-06-06T16:50:10.648624", "level": "INFO", "logger": "experiment.full_evaluation", "message": "Starting severity evaluation", "module": "run", "function": "run_severity_evaluation", "line": 179, "taskName": null, "asctime": "18:50:10"}
{"timestamp": "2025-06-06T16:50:10.652071", "level": "INFO", "logger": "experiment.full_evaluation", "message": "Severity evaluation completed", "module": "run", "function": "run_severity_evaluation", "line": 193, "taskName": null, "summary": {"total_cases": 45, "valid_cases": 0, "avg_distance": Infinity, "min_distance": Infinity, "max_distance": Infinity, "perfect_matches": 0}, "asctime": "18:50:10"}
{"timestamp": "2025-06-06T16:50:10.653256", "level": "INFO", "logger": "experiment.full_evaluation", "message": "Starting visualization generation", "module": "run", "function": "generate_visualizations", "line": 203, "taskName": null, "asctime": "18:50:10"}
{"timestamp": "2025-06-06T16:50:12.962182", "level": "ERROR", "logger": "experiment.full_evaluation", "message": "Experiment failed", "module": "logger", "function": "log_error", "line": 155, "taskName": null, "asctime": "18:50:12", "exception": {"type": "KeyError", "message": "' font-family'", "traceback": ["Traceback (most recent call last):\n", "  File \"C:\\Dev\\F29\\dxgpt-latitude-bench-test\\src\\run\\full_evaluation\\run.py\", line 483, in run\n    self.save_results(results, output_dir)\n    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^\n", "  File \"C:\\Dev\\F29\\dxgpt-latitude-bench-test\\src\\run\\full_evaluation\\run.py\", line 256, in save_results\n    self.generate_html_report(results, report_path)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^\n", "  File \"C:\\Dev\\F29\\dxgpt-latitude-bench-test\\src\\run\\full_evaluation\\run.py\", line 416, in generate_html_report\n    html_content = html_content.format(\n        timestamp=datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    )\n", "KeyError: ' font-family'\n"]}}
